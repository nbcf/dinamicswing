/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.teste.frame.View;

import br.teste.beans.Comandas;
import br.teste.beans.MoviRest;
import br.teste.beans.Produtos;
import java.awt.Dimension;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.RollbackException;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author nil_b
 */
public class MenuProdutos extends javax.swing.JFrame {
private static List<JButton> botoes;
public static javax.swing.JButton boton;
public static ImageIcon icone = null;

    public MenuProdutos() {
        initComponents();
        botoes = new ArrayList<>();
        boton  = null;
          if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
  data_inicial.setDate(new Date());
  data_final.setDate(new Date());
            
          setLocationRelativeTo(null);
         pack();
         setVisible(true);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("restaurante?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Produtos p");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        query1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT m FROM MoviRest m where m.flagEstatusPedido='dsfsdf'");
        list1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query1.getResultList());
        localPedidoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT l FROM LocalPedido l");
        localPedidoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : localPedidoQuery.getResultList();
        queryComanda = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Comandas c");
        listComanda = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : queryComanda.getResultList();
        jfr_pagarMovimento = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jtf_valorTotalApagar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtf_dinheiro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtf_pix = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtf_debito = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtf_credito = new javax.swing.JTextField();
        jcb_tipoPagamento = new javax.swing.JComboBox<>();
        jtf_troco = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jfr_anotarComanda = new javax.swing.JFrame();
        jLabel10 = new javax.swing.JLabel();
        jtf_insereTextoComanda = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jFrame3 = new javax.swing.JFrame();
        jtf_numeroComanda = new javax.swing.JTextField();
        data_inicial = new com.toedter.calendar.JDateChooser();
        data_final = new com.toedter.calendar.JDateChooser();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jbt_burguer = new javax.swing.JButton();
        jbt_sucos = new javax.swing.JButton();
        jbt_porcoes = new javax.swing.JButton();
        jbt_bebidas = new javax.swing.JButton();
        jbt_pratos = new javax.swing.JButton();
        jbt_salgados = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtf_totalApagarDisplay = new javax.swing.JTextField();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jToolBar4 = new javax.swing.JToolBar();
        jButton16 = new javax.swing.JButton();
        jbt_fechar = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Total");

        jtf_valorTotalApagar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_valorTotalApagar.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("A Vista");

        jtf_dinheiro.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_dinheiro.setEnabled(false);
        jtf_dinheiro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_dinheiroFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Pix");

        jtf_pix.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_pix.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Debeito");

        jtf_debito.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_debito.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Credito:");

        jtf_credito.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_credito.setEnabled(false);

        jcb_tipoPagamento.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jcb_tipoPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "A Vista", "Pix", "Debito", "Credito", "Composto" }));
        jcb_tipoPagamento.setEnabled(false);
        jcb_tipoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_tipoPagamentoActionPerformed(evt);
            }
        });

        jtf_troco.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jtf_troco.setEnabled(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.troco}"), jtf_troco, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Troco:");

        jButton11.setText("Confirmar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Cancelar");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Tipo Pgto.:");

        jTextField10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextField10.setEnabled(false);

        javax.swing.GroupLayout jfr_pagarMovimentoLayout = new javax.swing.GroupLayout(jfr_pagarMovimento.getContentPane());
        jfr_pagarMovimento.getContentPane().setLayout(jfr_pagarMovimentoLayout);
        jfr_pagarMovimentoLayout.setHorizontalGroup(
            jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfr_pagarMovimentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_valorTotalApagar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfr_pagarMovimentoLayout.createSequentialGroup()
                        .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)))
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                            .addComponent(jtf_dinheiro)
                            .addComponent(jtf_pix)
                            .addComponent(jtf_debito)
                            .addComponent(jtf_credito)
                            .addComponent(jcb_tipoPagamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, 343, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfr_pagarMovimentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap())
            .addGroup(jfr_pagarMovimentoLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jtf_troco, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jfr_pagarMovimentoLayout.setVerticalGroup(
            jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfr_pagarMovimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_valorTotalApagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcb_tipoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_dinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtf_pix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtf_debito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtf_credito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_troco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(43, 43, 43)
                .addGroup(jfr_pagarMovimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setText("Comanda");

        jtf_insereTextoComanda.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        jButton15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton15.setText("Confirmar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jfr_anotarComandaLayout = new javax.swing.GroupLayout(jfr_anotarComanda.getContentPane());
        jfr_anotarComanda.getContentPane().setLayout(jfr_anotarComandaLayout);
        jfr_anotarComandaLayout.setHorizontalGroup(
            jfr_anotarComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfr_anotarComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfr_anotarComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jfr_anotarComandaLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jtf_insereTextoComanda, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jfr_anotarComandaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton15)))
                .addContainerGap())
        );
        jfr_anotarComandaLayout.setVerticalGroup(
            jfr_anotarComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jfr_anotarComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jfr_anotarComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtf_insereTextoComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
        );

        jtf_numeroComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_numeroComandaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtf_numeroComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(data_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(data_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtf_numeroComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(data_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(data_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setEnabled(false);
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout(0, 3, 0, 1));
        jScrollPane1.setViewportView(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jToolBar1.setBackground(new java.awt.Color(102, 102, 102));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton7.setBackground(new java.awt.Color(102, 43, 88));
        jButton7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Vender");
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton7.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton7.setPreferredSize(new java.awt.Dimension(110, 60));
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton14.setBackground(new java.awt.Color(102, 123, 206));
        jButton14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("Adicionar");
        jButton14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton14.setFocusable(false);
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton14.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton14.setPreferredSize(new java.awt.Dimension(110, 60));
        jButton14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton14);

        jbt_burguer.setBackground(new java.awt.Color(102, 123, 206));
        jbt_burguer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_burguer.setForeground(new java.awt.Color(255, 255, 255));
        jbt_burguer.setText("Hamburguers");
        jbt_burguer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_burguer.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_burguer.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_burguer.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_burguer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_burguerActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_burguer);

        jbt_sucos.setBackground(new java.awt.Color(102, 123, 206));
        jbt_sucos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_sucos.setForeground(new java.awt.Color(255, 255, 255));
        jbt_sucos.setText("Sucos");
        jbt_sucos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_sucos.setFocusable(false);
        jbt_sucos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_sucos.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_sucos.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_sucos.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_sucos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbt_sucos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_sucosActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_sucos);

        jbt_porcoes.setBackground(new java.awt.Color(102, 123, 206));
        jbt_porcoes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_porcoes.setForeground(new java.awt.Color(255, 255, 255));
        jbt_porcoes.setText("Porções");
        jbt_porcoes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_porcoes.setFocusable(false);
        jbt_porcoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_porcoes.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_porcoes.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_porcoes.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_porcoes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbt_porcoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_porcoesActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_porcoes);

        jbt_bebidas.setBackground(new java.awt.Color(102, 123, 206));
        jbt_bebidas.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_bebidas.setForeground(new java.awt.Color(255, 255, 255));
        jbt_bebidas.setText("Bebidas");
        jbt_bebidas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_bebidas.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_bebidas.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_bebidas.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_bebidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_bebidasActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_bebidas);

        jbt_pratos.setBackground(new java.awt.Color(102, 123, 206));
        jbt_pratos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_pratos.setForeground(new java.awt.Color(255, 255, 255));
        jbt_pratos.setText("Pratos");
        jbt_pratos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_pratos.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_pratos.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_pratos.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_pratos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_pratosActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_pratos);

        jbt_salgados.setBackground(new java.awt.Color(102, 123, 206));
        jbt_salgados.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_salgados.setForeground(new java.awt.Color(255, 255, 255));
        jbt_salgados.setText("Salgados");
        jbt_salgados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_salgados.setFocusable(false);
        jbt_salgados.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_salgados.setMaximumSize(new java.awt.Dimension(110, 60));
        jbt_salgados.setMinimumSize(new java.awt.Dimension(110, 60));
        jbt_salgados.setPreferredSize(new java.awt.Dimension(110, 60));
        jbt_salgados.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbt_salgados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_salgadosActionPerformed(evt);
            }
        });
        jToolBar1.add(jbt_salgados);

        jButton5.setBackground(new java.awt.Color(102, 123, 206));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Pizzas");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton5.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton5.setPreferredSize(new java.awt.Dimension(110, 60));
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jToolBar1.add(jPanel4);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("R$: ");
        jPanel3.add(jLabel3);

        jtf_totalApagarDisplay.setBackground(new java.awt.Color(102, 102, 102));
        jtf_totalApagarDisplay.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jtf_totalApagarDisplay.setForeground(new java.awt.Color(255, 255, 255));
        jtf_totalApagarDisplay.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jtf_totalApagarDisplay.setMinimumSize(new java.awt.Dimension(250, 50));
        jtf_totalApagarDisplay.setPreferredSize(new java.awt.Dimension(250, 50));
        jtf_totalApagarDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_totalApagarDisplayActionPerformed(evt);
            }
        });
        jPanel3.add(jtf_totalApagarDisplay);

        jToolBar1.add(jPanel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jToolBar1, gridBagConstraints);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jButton1.setBackground(new java.awt.Color(102, 123, 206));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Padaria");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton1.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton1.setPreferredSize(new java.awt.Dimension(110, 60));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton2.setBackground(new java.awt.Color(102, 123, 206));
        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Laticínios");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton2.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton2.setPreferredSize(new java.awt.Dimension(110, 60));
        jToolBar2.add(jButton2);

        jButton9.setBackground(new java.awt.Color(102, 123, 206));
        jButton9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Delicatessem");
        jButton9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton9.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton9.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton9.setPreferredSize(new java.awt.Dimension(110, 60));
        jToolBar2.add(jButton9);

        jButton3.setBackground(new java.awt.Color(102, 123, 206));
        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Sorvetes");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setMaximumSize(new java.awt.Dimension(110, 60));
        jButton3.setMinimumSize(new java.awt.Dimension(110, 60));
        jButton3.setPreferredSize(new java.awt.Dimension(110, 60));
        jToolBar2.add(jButton3);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        jButton6.setBackground(new java.awt.Color(102, 185, 126));
        jButton6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Nomear Pedido");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.setMaximumSize(new java.awt.Dimension(150, 60));
        jButton6.setMinimumSize(new java.awt.Dimension(150, 60));
        jButton6.setPreferredSize(new java.awt.Dimension(150, 60));
        jToolBar3.add(jButton6);

        jButton8.setBackground(new java.awt.Color(102, 185, 126));
        jButton8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Adicionar Mesa");
        jButton8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton8.setMaximumSize(new java.awt.Dimension(150, 60));
        jButton8.setMinimumSize(new java.awt.Dimension(150, 60));
        jButton8.setPreferredSize(new java.awt.Dimension(150, 60));
        jToolBar3.add(jButton8);

        masterTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setRowHeight(18);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list1, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${comanda}"));
        columnBinding.setColumnName("COMANDA");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${produto}"));
        columnBinding.setColumnName("PRODUTO");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoProduto}"));
        columnBinding.setColumnName("TIPO");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoUnd}"));
        columnBinding.setColumnName("UND");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantVenda}"));
        columnBinding.setColumnName("QUANT.");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precoUnitario}"));
        columnBinding.setColumnName("PRECO");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${acrescimo}"));
        columnBinding.setColumnName("Acrescimo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${bairro}"));
        columnBinding.setColumnName("Bairro");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${caixa}"));
        columnBinding.setColumnName("Caixa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cep}"));
        columnBinding.setColumnName("Cep");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cidade}"));
        columnBinding.setColumnName("Cidade");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${complemento}"));
        columnBinding.setColumnName("Complemento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${couver}"));
        columnBinding.setColumnName("Couver");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cozinha}"));
        columnBinding.setColumnName("Cozinha");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cpf}"));
        columnBinding.setColumnName("Cpf");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataEntregue}"));
        columnBinding.setColumnName("Data Entregue");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataMovimento}"));
        columnBinding.setColumnName("Data Movimento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataPedido}"));
        columnBinding.setColumnName("Data Pedido");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${decrescimo}"));
        columnBinding.setColumnName("Decrescimo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${descricaoProd}"));
        columnBinding.setColumnName("Descricao Prod");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${detalhePedido}"));
        columnBinding.setColumnName("Detalhe Pedido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${entregador}"));
        columnBinding.setColumnName("Entregador");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${flagEstatusMovidet}"));
        columnBinding.setColumnName("Flag Estatus Movidet");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${flagEstatusPedido}"));
        columnBinding.setColumnName("Flag Estatus Pedido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaEntregue}"));
        columnBinding.setColumnName("Hora Entregue");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaPedido}"));
        columnBinding.setColumnName("Hora Pedido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaProducao}"));
        columnBinding.setColumnName("Hora Producao");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCaixa}"));
        columnBinding.setColumnName("Id Caixa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCliente}"));
        columnBinding.setColumnName("Id Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idCozinha}"));
        columnBinding.setColumnName("Id Cozinha");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLoja}"));
        columnBinding.setColumnName("Id Loja");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idMovRest}"));
        columnBinding.setColumnName("Id Mov Rest");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idMovimentoGeral}"));
        columnBinding.setColumnName("Id Movimento Geral");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idOperador}"));
        columnBinding.setColumnName("Id Operador");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idProduto}"));
        columnBinding.setColumnName("Id Produto");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idVendedor}"));
        columnBinding.setColumnName("Id Vendedor");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localPedido}"));
        columnBinding.setColumnName("Local Pedido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${logradouro}"));
        columnBinding.setColumnName("Logradouro");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${loja}"));
        columnBinding.setColumnName("Loja");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${movimento}"));
        columnBinding.setColumnName("Movimento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeCliente}"));
        columnBinding.setColumnName("Nome Cliente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${operador}"));
        columnBinding.setColumnName("Operador");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantAtual}"));
        columnBinding.setColumnName("Quant Atual");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantMin}"));
        columnBinding.setColumnName("Quant Min");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${quantUnd}"));
        columnBinding.setColumnName("Quant Und");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${recebCredito}"));
        columnBinding.setColumnName("Receb Credito");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${recebDebito}"));
        columnBinding.setColumnName("Receb Debito");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${recebDinheiro}"));
        columnBinding.setColumnName("Receb Dinheiro");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${recebPix}"));
        columnBinding.setColumnName("Receb Pix");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${servico}"));
        columnBinding.setColumnName("Servico");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${taxaCouver}"));
        columnBinding.setColumnName("Taxa Couver");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${taxaServico}"));
        columnBinding.setColumnName("Taxa Servico");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoAgregadorPgto}"));
        columnBinding.setColumnName("Tipo Agregador Pgto");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoLocal}"));
        columnBinding.setColumnName("Tipo Local");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoMovimento}"));
        columnBinding.setColumnName("Tipo Movimento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoPagto}"));
        columnBinding.setColumnName("Tipo Pagto");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoQuant}"));
        columnBinding.setColumnName("Tipo Quant");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalApagar}"));
        columnBinding.setColumnName("Total Apagar");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${totalPedido}"));
        columnBinding.setColumnName("Total Pedido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${troco}"));
        columnBinding.setColumnName("Troco");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${trocoPara}"));
        columnBinding.setColumnName("Troco Para");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${uf}"));
        columnBinding.setColumnName("Uf");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vendedor}"));
        columnBinding.setColumnName("Vendedor");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${zap}"));
        columnBinding.setColumnName("Zap");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setResizable(false);
            masterTable.getColumnModel().getColumn(1).setResizable(false);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            masterTable.getColumnModel().getColumn(2).setResizable(false);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(3).setResizable(false);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(4).setResizable(false);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(5).setResizable(false);
            masterTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jToolBar4.setFloatable(false);
        jToolBar4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jToolBar4.setRollover(true);

        jButton16.setBackground(new java.awt.Color(102, 185, 126));
        jButton16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setText("Salvar");
        jButton16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton16.setFocusable(false);
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setMaximumSize(new java.awt.Dimension(150, 60));
        jButton16.setMinimumSize(new java.awt.Dimension(150, 60));
        jButton16.setPreferredSize(new java.awt.Dimension(150, 60));
        jButton16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jToolBar4.add(jButton16);

        jbt_fechar.setBackground(new java.awt.Color(102, 185, 126));
        jbt_fechar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jbt_fechar.setForeground(new java.awt.Color(255, 255, 255));
        jbt_fechar.setText("Pagar");
        jbt_fechar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbt_fechar.setFocusable(false);
        jbt_fechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_fechar.setMaximumSize(new java.awt.Dimension(150, 60));
        jbt_fechar.setMinimumSize(new java.awt.Dimension(150, 60));
        jbt_fechar.setPreferredSize(new java.awt.Dimension(150, 60));
        jbt_fechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbt_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_fecharActionPerformed(evt);
            }
        });
        jToolBar4.add(jbt_fechar);

        jButton10.setBackground(new java.awt.Color(102, 185, 126));
        jButton10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Pagar Separado");
        jButton10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton10.setMaximumSize(new java.awt.Dimension(150, 60));
        jButton10.setMinimumSize(new java.awt.Dimension(150, 60));
        jButton10.setPreferredSize(new java.awt.Dimension(150, 60));
        jToolBar4.add(jButton10);

        jButton4.setBackground(new java.awt.Color(102, 185, 126));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Transferir");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setMaximumSize(new java.awt.Dimension(150, 60));
        jButton4.setMinimumSize(new java.awt.Dimension(150, 60));
        jButton4.setPreferredSize(new java.awt.Dimension(150, 60));
        jToolBar4.add(jButton4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1440, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToolBar3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

            jtf_numeroComanda.setEnabled(true);
            jtf_numeroComanda.setText("");
            jtf_numeroComanda.requestFocus();
            jtf_numeroComanda.setCaretPosition(0);
            jtf_numeroComanda.setText(jtf_insereTextoComanda.getText());
            inserircomanda();
    }//GEN-LAST:event_jButton7ActionPerformed
 public void  pesquisarJPA()
 {
//     String filtro = String.valueOf(jComboBox1.getSelectedItem());
//   //  System.out.println("filtro: "+filtro);
//     int tmt = filtro.length();
//   //  System.out.println(String.valueOf("tmt: "+tmt));
//     String filtrado = filtro.substring((tmt-3), tmt);
//   //  System.out.println("filtrado: "+filtrado);
//     int tmt1 = filtrado.length();
//   //  System.out.println(String.valueOf("tmt1: "+tmt1));
//     String fil1 = filtrado.substring(0, (tmt1-1));
//  //   System.out.println(fil1);
//
//    query = entityManager.createNamedQuery("CadLotes.PesquisaLabLocal");
//    //query.setParameter("idLaboratorio", cont.getCadLaboratorio().getIdLab().toString());
//    query.setParameter("idLocal",fil1);
//    java.util.Collection dadosResposta1 = query.getResultList();
//    list.clear();
//    list.addAll(dadosResposta1);  
    }  
    
     public void inserircomanda()
  {
         jfr_anotarComanda.setSize(469, 367);
         jfr_anotarComanda.setResizable(false);
         jfr_anotarComanda.setLocationRelativeTo(null);
         jfr_anotarComanda.pack();
         jfr_anotarComanda.setVisible(true);
        
  }
    
      public void fecharConta()
  {
         jfr_pagarMovimento.setSize(469, 367);
         jfr_pagarMovimento.setResizable(false);
         jfr_pagarMovimento.setLocationRelativeTo(null);
         jfr_pagarMovimento.pack();
         jfr_pagarMovimento.setVisible(true);
         jcb_tipoPagamento.setEnabled(true);
         jtf_valorTotalApagar.setText(jtf_totalApagarDisplay.getText());
  }
    
    
    
    private void jcb_tipoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_tipoPagamentoActionPerformed

        if (jcb_tipoPagamento.getSelectedItem().equals("A Vista"))
        {
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(false);
        jtf_debito.setEnabled(false);
        jtf_credito.setEnabled(false);
        jtf_dinheiro.setEnabled(true);
        jtf_troco.setEnabled(true);
        }
        else if(jcb_tipoPagamento.getSelectedItem().equals("Debito"))
        {
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(false);
        jtf_debito.setEnabled(true);
        jtf_credito.setEnabled(false);
        jtf_dinheiro.setEnabled(false);
        jtf_troco.setEnabled(false);
        }
        else if(jcb_tipoPagamento.getSelectedItem().equals("Pix"))
        {
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(true);
        jtf_debito.setEnabled(false);
        jtf_credito.setEnabled(false);
        jtf_dinheiro.setEnabled(false);
        jtf_troco.setEnabled(false);            
        }
        else if(jcb_tipoPagamento.getSelectedItem().equals("Credito"))
        {
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(false);
        jtf_debito.setEnabled(false);
        jtf_credito.setEnabled(true);
        jtf_dinheiro.setEnabled(false);
        jtf_troco.setEnabled(false);
        }
        else if(jcb_tipoPagamento.getSelectedItem().equals("Composto"))         
        {
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(true);
        jtf_debito.setEnabled(true);
        jtf_credito.setEnabled(true);
        jtf_dinheiro.setEnabled(true);
        jtf_troco.setEnabled(true);
         }
         
    }//GEN-LAST:event_jcb_tipoPagamentoActionPerformed
// for (MoviRest movRest : list1) 
//            {
//            
//            movRest.setComanda(jTextField6.getText());
//            movRest.setLocalPedido(String.valueOf(jComboBox2.getSelectedItem()));
//            }
// salvar();
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
 
        if(!jtf_insereTextoComanda.getText().equals(""))
        {    
            
        queryComanda = entityManager.createNamedQuery("Comandas.testaDisponibilidade");
        queryComanda.setParameter("flagComanda","ATIVO");
        queryComanda.setParameter("numero",jtf_insereTextoComanda.getText());
        List<Comandas> existenciaComanda = queryComanda.getResultList(); 
        
        
        query1 = entityManager.createNamedQuery("MoviRest.comandaOcupada");
        query1.setParameter("flagEstatusPedido","Aberto");
        query1.setParameter("comanda",jtf_insereTextoComanda.getText());
        List<MoviRest> estatuscomanda = query1.getResultList();

        if (existenciaComanda.size() > 0)
        {
            if(estatuscomanda.size() > 0 )
            {
     
               //  ghertyherty
        //      jtf_numeroComanda.setEnabled(true);
        //      jtf_numeroComanda.setText("");
        //      jtf_numeroComanda.requestFocus();
        //      jtf_numeroComanda.setCaretPosition(0);
                jtf_numeroComanda.setText(jtf_insereTextoComanda.getText());
            //  inserircomanda();
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                java.util.Collection data = query1.getResultList();
                for (Object entity : data) {
                    entityManager.refresh(entity);
                }
                list1.clear();
                list1.addAll(data);
        
        
            query1 = entityManager.createNamedQuery("MoviRest.adicionarConsumo");
            query1.setParameter("flagEstatusPedido","Aberto");  
         // query1.setParameter("tipoMovimento","Ativo");
            query1.setParameter("comanda",jtf_insereTextoComanda.getText());
//          query1.setParameter("dataIni", data_inicial.getDate());
//          query1.setParameter("dataFim", data_final.getDate());
            java.util.Collection carregaCompras = query1.getResultList();
            list1.clear();
            list1.addAll(carregaCompras);    
            
          jfr_anotarComanda.dispose();
          lista();
          Calc();
        }
        else if(estatuscomanda.size() == 0 )
        {
        lista();
        jtf_numeroComanda.setText(jtf_insereTextoComanda.getText());
        jfr_anotarComanda.dispose();
        jtf_valorTotalApagar.setEnabled(true);
        jtf_totalApagarDisplay.setEnabled(true);
        }
    }
    else 
    {
    JOptionPane.showMessageDialog(null, "Comanda não Existe ");
    }
       
    }//GEN-LAST:event_jButton15ActionPerformed
    }
    private void jbt_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_fecharActionPerformed

       fecharConta();         

    }//GEN-LAST:event_jbt_fecharActionPerformed
 public void calculoPagamentoAvista()
    {
        
    double valorTotal = Double.parseDouble(jtf_valorTotalApagar.getText());
    double dinheiro = Double.parseDouble(jtf_dinheiro.getText());
    double sobraDinheiro = dinheiro - valorTotal;
    jtf_troco.setText(String.valueOf(sobraDinheiro));
       for (MoviRest movRest : list1) 
            {
             movRest.setFlagEstatusPedido("Pago");
    try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<br.teste.beans.MoviRest> merged = new ArrayList<br.teste.beans.MoviRest>(list1.size());
            for (br.teste.beans.MoviRest m : list1) {
              
               
                merged.add(entityManager.merge(m));
            }
            list.clear();
            list1.addAll(merged);
        }
    }  
    
    }
    public void calculoPagamentoDebito()
    {
        
    double valorTotal = Double.parseDouble(jtf_valorTotalApagar.getText());
    double debito = Double.parseDouble(jtf_debito.getText());
    double sobraDebito = debito - valorTotal;
    jtf_troco.setText(String.valueOf(sobraDebito));
    
    } 
    
    public void calculoPagamentoCredito()
    {
        
    double valorTotal = Double.parseDouble(jtf_valorTotalApagar.getText());
    double credito = Double.parseDouble(jtf_credito.getText());
    double sobraCredito = credito - valorTotal;
    jtf_troco.setText(String.valueOf(sobraCredito));
    
    } 
    
     public void calculoPagamentoComposto()
    {
        
    double valorTotal = Double.parseDouble(jtf_valorTotalApagar.getText());
    double dinheiro = Double.parseDouble(jtf_dinheiro.getText());
    double credito = Double.parseDouble(jtf_credito.getText());
    double debito = Double.parseDouble(jtf_debito.getText());
    double somapgtos =  debito + credito + dinheiro + valorTotal;
    double sobraCredito = somapgtos - valorTotal;
    jtf_troco.setText(String.valueOf(sobraCredito));
    
    } 
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

 
// salvar();
        
        if(jcb_tipoPagamento.getSelectedItem().equals("A Vista")){

calculoPagamentoAvista();

atualizar();
jfr_pagarMovimento.dispose();


        jtf_valorTotalApagar.setText("0.0");
        jtf_totalApagarDisplay.setText("0.0");
        jtf_pix.setText("0.0");
        jtf_debito.setText("0.0");
        jtf_credito.setText("0.0");
        jtf_dinheiro.setText("0.0");
        jtf_troco.setText("0.0");
        jtf_pix.setEnabled(false);
        jtf_debito.setEnabled(false);
        jtf_credito.setEnabled(false);
        jtf_dinheiro.setEnabled(false);
        jtf_troco.setEnabled(false);
        jtf_numeroComanda.setText("");
        jtf_insereTextoComanda.setText("");
        jtf_valorTotalApagar.setEnabled(false);
        jtf_totalApagarDisplay.setEnabled(true);
        jtf_totalApagarDisplay.setEditable(true);
        jPanel1.removeAll();
        jPanel1.updateUI();
                

}   

    
            
    }//GEN-LAST:event_jButton11ActionPerformed
public void atualizar(){

  entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query1.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list1.clear();
        list1.addAll(data);

}
    private void jtf_dinheiroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_dinheiroFocusLost
calculoPagamentoAvista();   
    }//GEN-LAST:event_jtf_dinheiroFocusLost

    private void jtf_totalApagarDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_totalApagarDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_totalApagarDisplayActionPerformed

    private void jtf_numeroComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_numeroComandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_numeroComandaActionPerformed

    private void jbt_bebidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_bebidasActionPerformed
    jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Refrigerante");
    query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        String tipoProd = produtos.getTipoProduto();
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
     
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>"+tipoProd+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}    
        
    }//GEN-LAST:event_jbt_bebidasActionPerformed

    private void jbt_porcoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_porcoesActionPerformed
    jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Porcao");
    query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}

    }//GEN-LAST:event_jbt_porcoesActionPerformed

    private void jbt_burguerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_burguerActionPerformed
   jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Hamburguer");
     query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}    
    }//GEN-LAST:event_jbt_burguerActionPerformed

    private void jbt_salgadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_salgadosActionPerformed
    jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Salgado");
     query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}    
    }//GEN-LAST:event_jbt_salgadosActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Pizza");
     query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jbt_pratosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_pratosActionPerformed
   jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Prato");
     query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}
    }//GEN-LAST:event_jbt_pratosActionPerformed

    private void jbt_sucosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_sucosActionPerformed
 jPanel1.removeAll();
    jPanel1.updateUI();
    
    query = entityManager.createNamedQuery("Produtos.buscaTipoProduto");
    query.setParameter("tipoProduto","Suco");
     query.setParameter("flagAtivo","Ativo");
    java.util.Collection dadosResposta1 = query.getResultList();
    list.clear();
    list.addAll(dadosResposta1);  
    
    
     for (Produtos produtos : list) 
     {
        String nomeProduto = produtos.getProduto();
        String precoProduto = produtos.getValorFinal();
        String tipoProduto = produtos.getTipoProduto();
        String tipoUnit = produtos.getTipoUnd();  
        
        icone = new ImageIcon(produtos.getFotoPequena());         
        icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
        
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        
        boton.addActionListener(new java.awt.event.ActionListener() 
        { 
            
        public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
        {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals("")){
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else 
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");
          
          }
         }
      }
    );
    jPanel1.add(boton);
    jScrollPane1.setViewportView(jPanel1);
    botoes.add(boton);
    jPanel1.updateUI();  
}    
        
    }//GEN-LAST:event_jbt_sucosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
      jtf_numeroComanda.setEnabled(true);
            jtf_numeroComanda.setText("");
            jtf_numeroComanda.requestFocus();
            jtf_numeroComanda.setCaretPosition(0);
            jtf_numeroComanda.setText(jtf_insereTextoComanda.getText());
          //  inserircomanda();SELECT m FROM MoviRest m where m.flagEstatusPedido=''
        query1 = entityManager.createNamedQuery("MoviRest.adicionarConsumo");
            query1.setParameter("flagEstatusPedido","dsfsdf");  
         //   query1.setParameter("tipoMovimento","Ativo");
        //    query1.setParameter("comanda","12");
//            query1.setParameter("dataIni", data_inicial.getDate());
//            query1.setParameter("dataFim", data_final.getDate());
            java.util.Collection carregaCompras = query1.getResultList();
            list1.clear();
            list1.addAll(carregaCompras);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
for (MoviRest movRest : list1) {

 try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<br.teste.beans.MoviRest> merged = new ArrayList<br.teste.beans.MoviRest>(list1.size());
            for (br.teste.beans.MoviRest m : list1) {
                merged.add(entityManager.merge(m));
            }
            list1.clear();
            list1.addAll(merged);
        }


}
//           jtf_numeroComanda.setEnabled(true);
//            jtf_numeroComanda.setText("");
//            jtf_numeroComanda.requestFocus();
//            jtf_numeroComanda.setCaretPosition(0);
//            jtf_numeroComanda.setText(jtf_insereTextoComanda.getText());
          //  inserircomanda();SELECT m FROM MoviRest m where m.flagEstatusPedido=''
        query1 = entityManager.createNamedQuery("MoviRest.limparTabela");
            query1.setParameter("flagEstatusPedido","dsfsdf");  
         //   query1.setParameter("tipoMovimento","Ativo");
        //    query1.setParameter("comanda","12");
//            query1.setParameter("dataIni", data_inicial.getDate());
//            query1.setParameter("dataFim", data_final.getDate());
            java.util.Collection carregaCompras = query1.getResultList();
            list1.clear();
            list1.addAll(carregaCompras);   
            
              // TODO add your handling code here:
            jtf_valorTotalApagar.setText("0.0");
            jtf_totalApagarDisplay.setText("0.0");
            jtf_pix.setText("0.0");
            jtf_debito.setText("0.0");
            jtf_credito.setText("0.0");
            jtf_dinheiro.setText("0.0");
            jtf_troco.setText("0.0");
            jtf_pix.setEnabled(false);
            jtf_debito.setEnabled(false);
            jtf_credito.setEnabled(false);
            jtf_dinheiro.setEnabled(false);
            jtf_troco.setEnabled(false);
          //  jtf_numeroComanda.setText("");
            jtf_insereTextoComanda.setText("");
            jtf_valorTotalApagar.setEnabled(false);
            jtf_totalApagarDisplay.setEnabled(true);
            jtf_totalApagarDisplay.setEditable(true);


            jPanel1.removeAll();
            jPanel1.updateUI();
    }//GEN-LAST:event_jButton16ActionPerformed

    public void salvar(){
           try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<br.teste.beans.MoviRest> merged = new ArrayList<br.teste.beans.MoviRest>(list.size());
            for (br.teste.beans.MoviRest m : list1) {
                merged.add(entityManager.merge(m));
            }
            list1.clear();
            list1.addAll(merged);
        }
           
           
              entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list1.clear();
        list1.addAll(data);
    }
    
    
    
     public  void lista(){
         
// int index = masterTable.getSelectedRow();
//        br.teste.beans.Produtos P = list.get(masterTable.convertRowIndexToModel(index));
  
      

br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
    for (Produtos produtos : list) {
                String nomeProduto = produtos.getProduto();
                String precoProduto = produtos.getValorFinal();
                String tipoProduto = produtos.getTipoProduto();
                String tipoUnit = produtos.getTipoUnd();
       
                
                System.out.println(nomeProduto);

      icone = new ImageIcon(produtos.getFotoPequena());         
      icone.setImage(icone.getImage().getScaledInstance(100, 100, 100));
                
        boton = new JButton(icone); 
        boton.setLayout(null);
        boton.setBounds(10,  20 + 20, 100, 20);
        boton.setMinimumSize(new Dimension(150, 100));
        boton.setPreferredSize(new Dimension(150, 100));
        boton.setMaximumSize(new Dimension(150, 100));
        boton.setFont(new java.awt.Font("Arial", 0, 12));
        boton.setText("<html>Produto  :"+nomeProduto+"<br>Preço  :"+precoProduto+"<br></html>");
        boton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        boton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        boton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
         
      
    boton.addActionListener(new java.awt.event.ActionListener() {
        
        
        
    public void actionPerformed(java.awt.event.ActionEvent evtnomeProduto) 
    {
          if(!jtf_numeroComanda.getText().isEmpty() || !jtf_numeroComanda.getText().equals(""))
          {
                br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
                entityManager.persist(m);
                m.setProduto(nomeProduto);
                m.setTipoProduto(tipoProduto);
                m.setPrecoUnitario(precoProduto);
                m.setTipoUnd(tipoUnit);
                m.setQuantVenda("1.0");
                m.setFlagEstatusPedido("Aberto");
                m.setComanda(jtf_numeroComanda.getText());
 //             m.setDataMovimento(dataMovimento);
//              m.setHoraPedido(horaPedido);
                list1.add(m);
                Calc();
                int row = list1.size() - 1;
                masterTable.setRowSelectionInterval(row, row);
                masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
          }
          else
          {
          JOptionPane.showMessageDialog(null, "Insira Comanda");         
          }
        }
    });
        jPanel1.add(boton);
        jScrollPane1.setViewportView(jPanel1);
        botoes.add(boton);
        jPanel1.updateUI();
        } 
     }

    
    
     public void Calc(){
        Double valorTotal = 0.0;
        Double totalGeral = 0.0;
        int index = masterTable.getSelectedRow();
   //    br.teste.beans.MoviRest m = new br.teste.beans.MoviRest();
   
    
            for (MoviRest movRest : list1) 
            {
              //  if(movRest.getFlagEstatusPedido().equals("Aberto")){ 
                 if (movRest.getQuantVenda() == null )
                 {
                    
                     movRest.setQuantVenda("1.0");
                     System.out.println("entrou no hech");
                 }
                 
                      Double qtVenda = Double.parseDouble(movRest.getQuantVenda());
                      Double vlUnit = Double.parseDouble(movRest.getPrecoUnitario());
                      
                      if(movRest.getPrecoUnitario().isEmpty() || movRest.getPrecoUnitario().equals("") )
                      {
                      movRest.setPrecoUnitario("0.0");
                      }
                      
                      
                        movRest.setTotalApagar(String.valueOf( vlUnit * qtVenda));
                  
                        Double totalProd = Double.parseDouble(movRest.getTotalApagar());


            jtf_totalApagarDisplay.setText(String.valueOf(valorTotal = valorTotal + totalProd));
      
                }
            
           }
     
     
     
     
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MenuProdutos().setVisible(true);
                 
               MenuProdutos m = new MenuProdutos();
               m.setTitle(args[0]);
            //   jTextField1.setText(args[1]);
               m.setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static com.toedter.calendar.JDateChooser data_final;
    private static com.toedter.calendar.JDateChooser data_inicial;
    private static javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JButton jbt_bebidas;
    private javax.swing.JButton jbt_burguer;
    private javax.swing.JButton jbt_fechar;
    private javax.swing.JButton jbt_porcoes;
    private javax.swing.JButton jbt_pratos;
    private javax.swing.JButton jbt_salgados;
    private javax.swing.JButton jbt_sucos;
    private javax.swing.JComboBox<String> jcb_tipoPagamento;
    private javax.swing.JFrame jfr_anotarComanda;
    private javax.swing.JFrame jfr_pagarMovimento;
    private javax.swing.JTextField jtf_credito;
    private javax.swing.JTextField jtf_debito;
    private javax.swing.JTextField jtf_dinheiro;
    private javax.swing.JTextField jtf_insereTextoComanda;
    private javax.swing.JTextField jtf_numeroComanda;
    private javax.swing.JTextField jtf_pix;
    private static javax.swing.JTextField jtf_totalApagarDisplay;
    private javax.swing.JTextField jtf_troco;
    private javax.swing.JTextField jtf_valorTotalApagar;
    private static java.util.List<br.teste.beans.Produtos> list;
    private static java.util.List<br.teste.beans.MoviRest> list1;
    private java.util.List<br.teste.beans.Comandas> listComanda;
    private java.util.List<br.teste.beans.LocalPedido> localPedidoList;
    private javax.persistence.Query localPedidoQuery;
    private javax.swing.JTable masterTable;
    private static javax.persistence.Query query;
    private static javax.persistence.Query query1;
    private javax.persistence.Query queryComanda;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

     public void AdicionarConsumo()
    {
            query1 = entityManager.createNamedQuery("MoviRest.adicionarConsumo");
            query1.setParameter("flagEstatusPedido","Aberto");  
            query1.setParameter("tipoMovimento","Ativo");
            query1.setParameter("numero",jtf_insereTextoComanda.getText());
            query1.setParameter("dataIni", data_inicial.getDate());
            query1.setParameter("dataFim", data_final.getDate());
            java.util.Collection carregaCompras = query1.getResultList();
            list1.clear();
            list1.addAll(carregaCompras);
    }



}
